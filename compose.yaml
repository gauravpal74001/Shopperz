version: '3.8'

networks:
  e-commerce-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27018:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - e-commerce-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack
    container_name: redis
    ports:
      - 6379:6379
      - 8001:8001
    networks:
      - e-commerce-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: server
    ports:
      - 4000:4000
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://admin:admin@mongodb:27017/
      - REDIS_URL=redis://redis:6379
    networks:
      - e-commerce-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - path: ./package*.json
          action: rebuild
        - path: .
          target: /app
          action: sync